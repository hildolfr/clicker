Refactor: Serialized, Human-like Automation Scheduling with Visual Indicators
Version: 1.1.1 (Release Candidate)
Date: May 2025

Summary of Major Changes:

1. Replaced the old automation loop (which pressed keys in sequence with fixed delays) with a new scheduler using a single worker thread and a priority queue.
2. Each keystroke from keystrokes.txt is now scheduled independently, but all keypresses are serialized: only one key is ever pressed at a time, even if their intervals overlap.
3. The start_time_stagger from settings.json is used as the initial delay before any key is pressed after activation.
4. After each keypress, that key is rescheduled for its next interval, ensuring that the timing in keystrokes.txt is always obeyed.
5. If two or more keys are due at the same time, they are queued and executed one after another, never simultaneously.
6. The worker thread exits cleanly when automation is deactivated, and the schedule is cleared.
7. Added "order_obeyed" setting to control keystroke execution order: when true, keystrokes execute in the exact order from the file; when false, they're sorted by delay (lowest first).
8. Enhanced comment handling in configuration files for better user documentation.
9. Improved error handling for admin privileges and configuration file processing.
10. Added visual indicators for automation status:
    - GDI-based indicator that works in fullscreen applications
    - Pygame-based indicator as an alternative for window-based applications
    - User-selectable via the "indicator_type" setting
11. Added "global_cooldown" setting to enforce a minimum time between any keystroke executions, regardless of individual delay settings, ensuring a global rate limit on key presses.
12. Improved settings migration for backward compatibility when upgrading from previous versions.
13. Enhanced build scripts for better deployment and distribution packaging.

Motivation:

- The previous approach could result in unnatural, overlapping, or simultaneous keypresses if keystroke intervals were long and/or not harmonized.
- This new approach ensures all keypresses are human-like: never overlapping, always respecting the intended timing, and never firing faster than a real user could.
- The design is robust to any set of intervals, including long and short timers, and is easy to extend or maintain.
- The optional order_obeyed setting provides flexibility for different automation scenarios: either maintain exact file order or optimize by delay value.
- Visual indicators provide clear feedback to users about the automation status, especially important when working with fullscreen applications.
- The global_cooldown feature adds an additional layer of rate limiting to prevent keypresses from occurring too rapidly in succession, enhancing the human-like behavior.
- Improved documentation and error handling makes the application more user-friendly and stable.
- The rest of the app (tray, hotkey, file watching) remains unchanged while gaining this new customization capability. 

Recent Fixes:

v1.1.1:
- Fixed a bug where the GDI overlay was drawn on top of the first-run dialogue for new users, making it difficult to see and interact with the setup instructions.
- The fix delays initialization of the GDI indicator until after the first-run dialogue is dismissed, ensuring new users have a smooth onboarding experience. 